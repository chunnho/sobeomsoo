'use client';
import { jsx as _jsx } from "react/jsx-runtime";
import { useEffect, useRef, useState } from 'react';
import useMousePosition from '../hooks/useMousePosition';
import useMousePressed from '../hooks/useMousePressed';
import useWindowSize from '../hooks/useWindowSize';
function FullpageScrollbar(_a) {
    var contentsHeight = _a.contentsHeight, scrollY = _a.scrollY, sectionRef = _a.sectionRef;
    var handler = useRef(null);
    var mouseY = useMousePosition().y;
    var isMousePressed = useMousePressed(handler);
    var _b = useState(0), handlerHeight = _b[0], setHandlerHeight = _b[1];
    var _c = useState(0), handlerTop = _c[0], setHandlerTop = _c[1];
    var _d = useWindowSize(), windowWidth = _d.width, windowHeight = _d.height;
    var _e = useState(0), pressMouseY = _e[0], setPressMouseY = _e[1];
    var _f = useState(0), pressScrollY = _f[0], setPressScrollY = _f[1];
    useEffect(function () {
        setHandlerTop((100 - (windowHeight / contentsHeight) * 100) *
            (scrollY / (contentsHeight - windowHeight)));
        setHandlerHeight((windowHeight / contentsHeight) * 100);
    }, [windowHeight, contentsHeight, scrollY]);
    useEffect(function () {
        if (isMousePressed) {
            setPressMouseY(mouseY);
            setPressScrollY(scrollY);
        }
        else {
            // 삼성브라우저에서 인풋창에 키보드가 사라지는 현상으로 주석처리
            // window.getSelection()?.removeAllRanges();
        }
        // eslint-disable-next-line react-hooks/exhaustive-deps
    }, [isMousePressed]);
    useEffect(function () {
        if (isMousePressed) {
            var newScrollY = ((mouseY - pressMouseY) / windowHeight) * contentsHeight + pressScrollY;
            if (sectionRef.current) {
                sectionRef.current.scrollTo(0, newScrollY);
            }
        }
    }, [
        mouseY,
        pressMouseY,
        windowWidth,
        windowHeight,
        contentsHeight,
        pressScrollY,
        isMousePressed,
        sectionRef,
    ]);
    return (_jsx("div", { className: "react-fullpage__scrollbar", style: { height: "".concat(contentsHeight, "px") }, children: _jsx("div", { className: "react-fullpage__scrollbar-sticker", style: { height: "".concat(windowHeight, "px") }, children: _jsx("div", { className: "react-fullpage__scrollbar-container", style: { height: "".concat(windowHeight, "px") }, children: _jsx("button", { type: "button", ref: handler, className: "react-fullpage__scrollbar-handler ".concat(isMousePressed && 'is-pressed'), style: { top: "".concat(handlerTop, "%"), height: "".concat(handlerHeight, "%") }, "data-is-pressed": isMousePressed }) }) }) }));
}
export default FullpageScrollbar;
//# sourceMappingURL=FullpageScrollbar.js.map