import { useState, useEffect } from 'react';
function useHash() {
    var _a = useState(''), hashValue = _a[0], setHashValue = _a[1];
    useEffect(function () {
        var handleHashChange = function () {
            var newHashValue = window.location.hash.substring(1);
            setHashValue(newHashValue);
        };
        handleHashChange();
        window.addEventListener('hashchange', handleHashChange);
        return function () {
            window.removeEventListener('hashchange', handleHashChange);
        };
    }, []);
    var updateHash = function (newHashValue) {
        if (newHashValue) {
            window.location.hash = newHashValue;
            setHashValue(newHashValue);
        }
        else {
            window.history.replaceState(null, document.title, window.location.pathname);
            setHashValue('');
        }
    };
    return { hashValue: hashValue, updateHash: updateHash };
}
export default useHash;
//# sourceMappingURL=useHash.js.map